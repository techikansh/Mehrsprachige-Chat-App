library(tidyverse)
library(ggplot2)
library(rstatix)
install.packages("rstatix")
library(tidyverse)
library(ggplot2)
library(rstatix)
library(ggpubr)
install.packages("ggpubr")
library(tidyverse)
library(ggplot2)
library(rstatix)
library(ggpubr)
data <- read.csv("./results/results.csv")
data
View(data)
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score),
sd_bleu = sd(bleu_score),
mean_meteor = mean(meteor_score),
sd_meteor = sd(meteor_score),
mean_time = mean(time_taken),
sd_time = sd(time_taken)
)
summary_stats
data <- data %>%
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
View(data)
View(data)
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score),
sd_bleu = sd(bleu_score),
mean_meteor = mean(meteor_score),
sd_meteor = sd(meteor_score),
mean_time = mean(time_taken),
sd_time = sd(time_taken)
)
summary_stats
View(summary_stats)
# Read the data
data <- read.csv("./results/results.csv")
data <- data %>%
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score),
sd_bleu = sd(bleu_score),
mean_meteor = mean(meteor_score),
sd_meteor = sd(meteor_score),
mean_time = mean(time_taken),
sd_time = sd(time_taken)
)
summary_stats
data <- read.csv("./results/results.csv", header=TRUE)
data <- data %>%
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
# Now try the summary stats again
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score),
sd_bleu = sd(bleu_score),
mean_meteor = mean(meteor_score),
sd_meteor = sd(meteor_score),
mean_time = mean(time_taken),
sd_time = sd(time_taken)
)
summary_stats
data <- read.csv("./results/results.csv", header=TRUE)
data <- data %>%
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
# Now try the summary stats again
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score),
sd_bleu = sd(bleu_score),
mean_meteor = mean(meteor_score),
sd_meteor = sd(meteor_score),
mean_time = mean(time_taken),
sd_time = sd(time_taken)
)
summary_stats
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score),
sd_bleu = sd(bleu_score),
mean_meteor = mean(meteor_score),
sd_meteor = sd(meteor_score),
mean_time = mean(time_taken),
sd_time = sd(time_taken)
)
summary_stats
kw_bleu <- kruskal.test(bleu_score ~ service, data = data)
kw_meteor <- kruskal.test(meteor_score ~ service, data = data)
kw_time <- kruskal.test(time_taken ~ service, data = data)
kw_bleu
kw_meteor
kw_meteor <- kruskal.test(meteor_score ~ service, data = data)
source("~/Documents/UNI/Projects/MERN Projects/Chat-App/evaluation/analysis_script.R", echo=TRUE)
install.packages("ggpubr")
install.packages("rstatix")
kw_time <- kruskal.test(time_taken ~ service, data = data)
kw_time
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
kw_bleu <- kruskal.test(bleu_score ~ service, data = data)
kw_meteor <- kruskal.test(meteor_score ~ service, data = data)
kw_time <- kruskal.test(time_taken ~ service, data = data)
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
summary_stats
kw_bleu;
kw_meteor;
kw_time;
# Perform pairwise Wilcoxon tests with p-value adjustment
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
# Perform pairwise Wilcoxon tests with p-value adjustment
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
pw_time <- pairwise.wilcox.test(data$time_taken, data$service, p.adjust.method = "bonferroni")
# Create visualizations
# Box plots for BLEU scores
bleu_plot <- ggplot(data, aes(x = service, y = bleu_score, fill = service)) +
geom_boxplot() +
theme_minimal() +
labs(title = "BLEU Scores by Service",
x = "Service",
y = "BLEU Score") +
theme(legend.position = "none")
pw_time <- pairwise.wilcox.test(data$time_taken, data$service, p.adjust.method = "bonferroni")
# Create visualizations
# Box plots for BLEU scores
bleu_plot <- ggplot(data, aes(x = service, y = bleu_score, fill = service)) +
geom_boxplot() +
theme_minimal() +
labs(title = "BLEU Scores by Service",
x = "Service",
y = "BLEU Score") +
theme(legend.position = "none")
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
clear)=
clear()=
clear
clear()
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
data <- read.csv("./results/results.csv", header=TRUE, quote="\"", stringsAsFactors=FALSE)
data
data <- data %>%
filter(!is.na(service) & service != "") %>%  # Remove empty rows
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
data <- read.csv("./results/results.csv", header=TRUE, quote="\"", stringsAsFactors=FALSE)
# Clean the data
data <- data %>%
filter(!is.na(service) & service != "") %>%  # Remove empty rows
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
View(data)
# Calculate summary statistics
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score, na.rm=TRUE),
sd_bleu = sd(bleu_score, na.rm=TRUE),
mean_meteor = mean(meteor_score, na.rm=TRUE),
sd_meteor = sd(meteor_score, na.rm=TRUE),
mean_time = mean(time_taken, na.rm=TRUE),
sd_time = sd(time_taken, na.rm=TRUE)
)
summary_stats
kw_bleu <- kruskal.test(bleu_score ~ service, data = data)
kw_meteor <- kruskal.test(meteor_score ~ service, data = data)
kw_time <- kruskal.test(time_taken ~ service, data = data)
kw_bleu;
kw_meteor;
kw_time;
kw_bleu;
kw_meteor;
kw_time;
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
kw_bleu <- kruskal.test(bleu_score ~ service, data = data)
kw_meteor <- kruskal.test(meteor_score ~ service, data = data)
kw_time <- kruskal.test(time_taken ~ service, data = data)
kw_time <- kruskal.test(time_taken ~ service, data = data)
kw_bleu;
kw_meteor;
kw_time;
# Perform pairwise Wilcoxon tests with p-value adjustment
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
summary_stats
table(data$service)
data <- read.csv("./results/results.csv", header=TRUE, quote="\"", stringsAsFactors=FALSE)
# Clean the data
data <- data %>%
filter(!is.na(service) & service != "") %>%  # Remove empty rows
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score, na.rm=TRUE),
sd_bleu = sd(bleu_score, na.rm=TRUE),
mean_meteor = mean(meteor_score, na.rm=TRUE),
sd_meteor = sd(meteor_score, na.rm=TRUE),
mean_time = mean(time_taken, na.rm=TRUE),
sd_time = sd(time_taken, na.rm=TRUE)
)
summary_stats
View(data)
data <- read.csv("./results/results.csv", header=TRUE, quote="\"", stringsAsFactors=FALSE)
data <- data %>%
filter(!is.na(service) & service != "") %>%  # Remove empty rows
mutate(
bleu_score = as.numeric(bleu_score),
meteor_score = as.numeric(meteor_score),
time_taken = as.numeric(time_taken)
)
summary_stats <- data %>%
group_by(service) %>%
summarise(
mean_bleu = mean(bleu_score, na.rm=TRUE),
sd_bleu = sd(bleu_score, na.rm=TRUE),
mean_meteor = mean(meteor_score, na.rm=TRUE),
sd_meteor = sd(meteor_score, na.rm=TRUE),
mean_time = mean(time_taken, na.rm=TRUE),
sd_time = sd(time_taken, na.rm=TRUE)
)
summary_stats
kw_bleu <- kruskal.test(bleu_score ~ service, data = data)
kw_meteor <- kruskal.test(meteor_score ~ service, data = data)
kw_time <- kruskal.test(time_taken ~ service, data = data)
kw_bleu;
kw_meteor;
kw_time;
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
pw_meteor <- pairwise.wilcox.test(data$meteor_score, data$service, p.adjust.method = "bonferroni")
pw_time <- pairwise.wilcox.test(data$time_taken, data$service, p.adjust.method = "bonferroni")
pw_bleu
pw_bleu
pw_bleu <- pairwise.wilcox.test(data$bleu_score, data$service, p.adjust.method = "bonferroni")
pw_meteor <- pairwise.wilcox.test(data$meteor_score, data$service, p.adjust.method = "bonferroni")
pw_time <- pairwise.wilcox.test(data$time_taken, data$service, p.adjust.method = "bonferroni")
pw_bleu
pw_meteor
pw_time
bleu_plot <- ggplot(data, aes(x = service, y = bleu_score, fill = service)) +
geom_boxplot() +
theme_minimal() +
labs(title = "BLEU Scores by Service",
x = "Service",
y = "BLEU Score") +
theme(legend.position = "none")
meteor_plot <- ggplot(data, aes(x = service, y = meteor_score, fill = service)) +
geom_boxplot() +
theme_minimal() +
labs(title = "METEOR Scores by Service",
x = "Service",
y = "METEOR Score") +
theme(legend.position = "none")
bleu_plot
bleu_plot
meteor_plot <- ggplot(data, aes(x = service, y = meteor_score, fill = service)) +
geom_boxplot() +
theme_minimal() +
labs(title = "METEOR Scores by Service",
x = "Service",
y = "METEOR Score") +
theme(legend.position = "none")
meteor_plot
time_plot <- ggplot(data, aes(x = service, y = time_taken, fill = service)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Translation Times by Service",
x = "Service",
y = "Time (seconds)") +
theme(legend.position = "none")
time_plot
